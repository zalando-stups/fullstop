management:
    port: 7979

endpoints:
    health:
        sensitive: false

# defaults values for info endpoints
project:
    artifactId: fullstop
    name: Fullstop
    version: X.X.X.X
    description: Audit reporting application

# values from maven
info:
    app:
        artifact: fullstop
        name: Fullstop
        description: Audit reporting application
        version: XXXX

spring:
    # JACKSON (JacksonProperties)
    jackson:
        property-naming-strategy: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
        date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
        serialization:
              write-dates-as-timestamps: false
        deserialization:
            fail-on-unknown-properties: false
    oauth2:
        resource:
            tokenInfoUri: https://example.com/oauth/tokeninfo
    datasource:
        url: jdbc:postgresql://localhost:5435/fullstop
        username: postgres
        password: postgres
        driver-class-name: org.postgresql.Driver
#    jpa:
#        hibernate:
#            ddl-auto: create-drop
#        show-sql: true
# Uncomment the above statements for debugging. This will drop and recreate a schema everytime you restart Fullstop.

fullstop:

    logging:
        dir: ${java.io.tmpdir}/fullstop_logs

    container:
        autoStart: false

    processor:
        properties:
            # The sqs url where you wish to pull CloudTrail notification from (required)
            sqsUrl: https://sqs.us-west-1.amazonaws.com/1234567890/fullstop

            # The SQS end point specific to a region
            sqsRegion: us-west-1

            # A period of time during which Amazon SQS prevents other consuming components
            # from receiving and processing that message
            visibilityTimeout: 60

            # The S3 end point specific to a region
            s3Region: us-west-1

            # Number of threads to download S3 files in parallel when you enable thread mode
            threadCount: 1

            # The duration in seconds to wait for thread pool termination before issue shutDownNow
            threadTerminationDelaySeconds: 60

            # Max number of AWSCloudTrailEvent that buffered before emit. EagleEye may emit 0 events
            maxEventsPerEmit: 10

            # Whether to include raw event in CloudTrailEventMetadata
            enableRawEventInfo: false
    instanceData:
      # Bucket, where USER_DATA and AUDIT_LOG will be stored
      bucketName: anBucketName

    plugins:
        properties:
            # The bucket, where our enriched data will be stored
            s3bucket: anotherBucketName

        region:
            # The whitelist of regions
            whitelistedRegions:
              - 'us-west-1'
              - 'us-east-1'

        ami:
            # Account containing whitelisted AMI
            whitelistedAmiAccount: 123456,2345678,34567890
            amiNameStartWith: aPrefix

        kio:
            url: https://example.com/kio/api

        pierone:
            url: https://example.com/pierone/api

        registry:
            defaultMandatoryApprovals:
              - SPECIFICATION
              - CODE_CHANGE
              - TEST
              - DEPLOY
            mandatoryApprovals: ${FULLSTOP_MANDATORY_APPROVALS}
            defaultApprovalsFromMany:
              - CODE_CHANGE
              - TEST
              - DEPLOY
            approvalsFromMany: ${FULLSTOP_APPROVALS_FROM_MANY}

        unapprovedServicesAndRole:
            bucketName: fullstop-template-bucket
            prefix: template-folder
            # iam event names that activates the plugin
            eventNames:
              - 'CreateRole'
              - 'DeleteRole'
              - 'AttachRolePolicy'
              - 'UpdateAssumeRolePolicy'
              - 'PutRolePolicy'

    clients:
        kio:
            url: https://example.com/kio/api

        pierone:
            url: https://example.com/pierone/api

        teamService:
            url: https://example.com/teams/api

        kontrolletti:
            url: https://example.com/kontrolletti/api

#
# OAuth2
#
tokens:
    accessTokenUri: https://example.com/oauth/accesstoken
    credentialsDirectory: ${user.dir}/credentials
    autoStartup: false

    token-configuration-list:
        - tokenId: kio
          scopes:
              - uid
        - tokenId: pierone
          scopes:
              - uid
        - tokenId: teamService
          scopes:
              - uid
        - tokenId: kontrolletti
          scopes:
              - uid

javax:
    persistence:
        validation:
            # force validation - fail fast if something goes wrong
            mode: CALLBACK
            group:
                pre-update: javax.validation.groups.Default,org.zalando.stups.fullstop.violation.domain.validation.groups.PersistenceOnly
                pre-persist: javax.validation.groups.Default,org.zalando.stups.fullstop.violation.domain.validation.groups.PersistenceOnly
                pre-remove: javax.validation.groups.Default,org.zalando.stups.fullstop.violation.domain.validation.groups.PersistenceOnly

flyway:
    init-sqls: "SET SEARCH_PATH TO fullstop_data;"
    baseline-on-migrate: true
    baseline-version-as-string: 0
    schemas:
     - "fullstop_data"